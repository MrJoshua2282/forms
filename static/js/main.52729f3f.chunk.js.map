{"version":3,"sources":["Form1/Input/Input.js","Form1/Body.js","Form2/Body2.js","Form3/Body3.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","validationClass","element","validationError","valid","shouldValidate","touched","valueType","toLowerCase","elType","className","properties","value","onChange","options","map","el","i","key","displayValue","label","Body","state","formObj","form","id","validation","required","type","placeholder","minLength","formIsValid","inputChangeHandler","event","itemId","target","copyForm","checkValidity","every","setState","submitHandler","preventDefault","reduce","acc","console","log","isValid","trim","length","inputs","this","onSubmit","e","disabled","Component","submitted","displayHandler","name","document","querySelector","style","display","blurHandler","inputHandler","username","special","upperUsr","consNum","sixLength","psw","lowerPsw","upperPsw","oneNum","eightLength","search","classList","add","remove","submitForm","fullName","fullNameRef","current","usernameRef","password","passwordRef","email","emailRef","React","createRef","textAlign","htmlFor","pattern","title","ref","onBlur","onFocus","Body3","useState","currentPage","setCurrentPage","firstName","setFirstName","lastName","setLastName","age","setAge","city","setCity","zip","setZip","setUsername","setPassword","passwordConfirm","setPasswordConfirm","signUp","setSignUp","pageHandler","count","useEffect","circle1","circle2","circle3","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.52729f3f.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Input.css';\n\nconst Input = (props) => {\n    let element = null;\n    let validationClass;\n    let validationError = null;\n    if (!props.valid && props.shouldValidate && props.touched) {\n        validationClass = 'invalid-form1 ';\n    }\n\n    if (!props.valid && props.touched) {\n        validationError = <p>Please enter a valid {props.valueType.toLowerCase()}</p>;\n    }\n\n    switch (props.elType) {\n        case 'input':\n            element = <input className={`input ${validationClass}`} {...props.properties} value={props.value} onChange={props.onChange} />;\n            break;\n        case 'textarea':\n            element = <textarea className={`input ${validationClass}`} {...props.properties} value={props.value} onChange={props.onChange} />;\n            break;\n        case 'select':\n            element = <select className={`input ${validationClass}`} value={props.value} onChange={props.onChange}>\n                {props.properties.options.map((el, i) => {\n                    return (<option key={i} value={el.value}>{el.displayValue}</option>)\n                })}\n            </select>;\n            break;\n        default:\n            element = <input className={`input ${validationClass}`} {...props.properties} value={props.value} onChange={props.onChange} />;\n    }\n\n    return (\n        <div className='inputDiv'>\n            <label className='inputLabel'>{props.label}</label>\n            {element}\n            {validationError}\n        </div>\n    );\n}\n\nexport default Input;","import React, { Component } from 'react';\n\nimport './Body.css';\nimport Input from './Input/Input';\n\nclass Body extends Component {\n    state = {\n        formObj: '',\n        form: [\n            // Name\n            { id: 'Name', valid: false, validation: { required: true, touched: false }, elType: 'input', properties: { type: 'text', placeholder: 'Name' }, value: '' },\n\n            // Street\n            { id: 'Street', valid: false, validation: { required: true, touched: false }, elType: 'input', properties: { type: 'text', placeholder: 'Street' }, value: '' },\n\n            // Zip Code\n            { id: 'Zip Code', valid: false, validation: { required: true, minLength: 5, touched: false }, elType: 'input', properties: { type: 'text', placeholder: 'Zip Code' }, value: '' },\n\n            // Country\n            { id: 'Country', valid: false, validation: { required: true, touched: false }, elType: 'input', properties: { type: 'text', placeholder: 'Country' }, value: '' },\n\n            // Email\n            { id: 'Email', valid: false, validation: { required: true, touched: false }, elType: 'input', properties: { type: 'email', placeholder: 'Email' }, value: '' },\n\n            // Delivery choice\n            {\n                id: 'Delivery',\n                valid: true,\n                validation: {},\n                elType: 'select',\n                value: 'fastest',\n                properties: {\n                    options: [\n                        { value: 'fastest', displayValue: 'Fastest' },\n                        { value: 'cheapest', displayValue: 'Cheapest' }\n                    ]\n                }\n            },\n        ],\n        formIsValid: false\n    }\n\n    checkValidity(value, validation) {\n        let isValid = true;\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (validation.minLength) {\n            isValid = value.length >= validation.minLength && isValid;\n        }\n        return isValid;\n    }\n\n    inputChangeHandler = (event, itemId) => {\n        const { value } = event.target;\n\n        let copyForm = [...this.state.form];\n\n        copyForm = copyForm.map((el, i) => {\n            if (i === itemId) {\n                el.value = value;\n                el.valid = this.checkValidity(el.value, el.validation);\n                el.touched = true;\n            }\n            return el;\n        });\n\n        let formIsValid = true;\n        formIsValid = this.state.form.every(el => el.valid && formIsValid);\n        // console.log(copyForm);\n        this.setState({ form: copyForm, formIsValid: formIsValid });\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n\n        let formObj = this.state.form.reduce((acc, el, i) => {\n            acc[el.id] = el.value;\n            return acc;\n        }, {});\n\n        this.setState({ formObj: formObj });\n        console.log(formObj);\n    }\n\n    render() {\n        let inputs = this.state.form.map((el, i) => {\n            return <Input\n                key={i}\n                elType={el.elType}\n                value={el.value}\n                properties={el.properties}\n                onChange={(event) => this.inputChangeHandler(event, i)}\n                valid={el.valid}\n                shouldValidate={el.validation}\n                touched={el.touched}\n                valueType={el.id}\n            />\n        });\n\n        return (\n            <form className='form1-body' onSubmit={e => this.submitHandler(e)}>\n                <p className='form1-create-account'>create account</p>\n                {inputs}\n                <button className='form1Btn' disabled={!this.state.formIsValid}>Join the crew!</button>\n            </form>\n        );\n    };\n};\n\nexport default Body;","import React, { Component } from 'react';\n\nimport './Body2.css';\n\nclass Body extends Component {\n    constructor(props) {\n        super(props)\n        this.fullNameRef = React.createRef();\n        this.usernameRef = React.createRef();\n        this.passwordRef = React.createRef();\n        this.emailRef = React.createRef();\n    }\n    state = {\n        submitted: false,\n    }\n\n    displayHandler = (event) => {\n        const { name } = event.target;\n        if (name === 'username') document.querySelector('.form2-body-username-req').style.display = 'block';\n        if (name === 'password') document.querySelector('.form2-body-password-req').style.display = 'block';\n    }\n\n    blurHandler = (event) => {\n        const { name } = event.target;\n        if (name === 'username') document.querySelector('.form2-body-username-req').style.display = 'none';\n        if (name === 'password') document.querySelector('.form2-body-password-req').style.display = 'none';\n    }\n\n    inputHandler = (event) => {\n        const { value, name } = event.target;\n        const username = {\n            special: document.querySelector('.special'),\n            upperUsr: document.querySelector('.upper-usr'),\n            consNum: document.querySelector('.consNum'),\n            sixLength: document.querySelector('.sixLength'),\n        }\n\n        const psw = {\n            lowerPsw: document.querySelector('.lower-psw'),\n            upperPsw: document.querySelector('.upper-psw '),\n            oneNum: document.querySelector('.oneNum'),\n            eightLength: document.querySelector('.eightLength'),\n        }\n\n        if (name === 'username') {\n            if (value.search(/[!@#$%^&*()?]/g) >= 0) {\n                username.special.classList.add('valid');\n                username.special.classList.remove('invalid');\n            } else {\n                username.special.classList.remove('valid');\n                username.special.classList.add('invalid');\n            }\n            if (value.search(/[A-Z]/g) >= 0) {\n                username.upperUsr.classList.add('valid');\n                username.upperUsr.classList.remove('invalid');\n            } else {\n                username.upperUsr.classList.remove('valid');\n                username.upperUsr.classList.add('invalid');\n            }\n            if (value.search(/\\d\\d/g) >= 0) {\n                username.consNum.classList.add('valid');\n                username.consNum.classList.remove('invalid');\n            } else {\n                username.consNum.classList.remove('valid');\n                username.consNum.classList.add('invalid');\n            }\n            if (value.length > 5) {\n                username.sixLength.classList.add('valid');\n                username.sixLength.classList.remove('invalid');\n            } else {\n                username.sixLength.classList.remove('valid');\n                username.sixLength.classList.add('invalid');\n            }\n        }\n\n        if (name === 'password') {\n            if (value.search(/[a-z]/g) >= 0) {\n                psw.lowerPsw.classList.add('valid');\n                psw.lowerPsw.classList.remove('invalid');\n            } else {\n                psw.lowerPsw.classList.remove('valid');\n                psw.lowerPsw.classList.add('invalid');\n            }\n            if (value.search(/[A-Z]/g) >= 0) {\n                psw.upperPsw.classList.add('valid');\n                psw.upperPsw.classList.remove('invalid');\n            } else {\n                psw.upperPsw.classList.remove('valid');\n                psw.upperPsw.classList.add('invalid');\n            }\n            if (value.search(/\\d/g) >= 0) {\n                psw.oneNum.classList.add('valid');\n                psw.oneNum.classList.remove('invalid');\n            } else {\n                psw.oneNum.classList.remove('valid');\n                psw.oneNum.classList.add('invalid');\n            }\n            if (value.length > 7) {\n                psw.eightLength.classList.add('valid');\n                psw.eightLength.classList.remove('invalid');\n            } else {\n                psw.eightLength.classList.remove('valid');\n                psw.eightLength.classList.add('invalid');\n            }\n        }\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        const form = {\n            fullName: this.fullNameRef.current.value,\n            username: this.usernameRef.current.value,\n            password: this.passwordRef.current.value,\n            email: this.emailRef.current.value\n        }\n\n        console.log(form);\n        this.setState({ submitted: true });\n\n        // axios.post('/api/signup', form)\n        //         .then(result => {\n        //         `console.log(result)`}.catch(err => {\n        //         `console.log(result);`\n        //     }))\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.submitForm} className='form2-body'>\n                {!this.state.submitted &&\n                    <div className='form2-body-div'>\n                        <p style={{ textAlign: 'center' }}><b>Sign Up</b></p>\n                        <label htmlFor='full-name' className='form2-body-label' >Full Name</label><br />\n                        <input id='full-name' type='text' className='form2-body-input' required pattern=\"(?=.*[a-zA-Z]).{1,}\" title='Name cannot be empty' ref={this.fullNameRef} /><br />\n                        <label htmlFor='username' name='username' className='form2-body-label'  >Username</label><br />\n                        <input onChange={e => this.inputHandler(e)} onBlur={e => this.blurHandler(e)} onFocus={e => this.displayHandler(e)} id='username' name='username' type='text' className='form2-body-input' required pattern='(?=.*[!@#$%^&*()?])(?=.*\\d\\d)(?=.*[A-Z]).{6,}' title='Username must contain a special character (!@#$%^&*()?), an uppercase letter, two consecutive numbers, and at least 6 characters' ref={this.usernameRef} /><br />\n                        <div className='form2-body-username-req'>\n                            <p className='special invalid'>Must contain a special character (!@#$%^&*()?)</p>\n                            <p className='upper-usr invalid'>Must contain an uppercase letter</p>\n                            <p className='consNum invalid'>Must contain two consecutive numbers</p>\n                            <p className='sixLength invalid'>Must contain at least 6 characters</p>\n                        </div>\n                        <label htmlFor='password-form2' className='form2-body-label' >Password</label><br />\n                        <input onChange={e => this.inputHandler(e)} onBlur={e => this.blurHandler(e)} onFocus={e => this.displayHandler(e)} id='password-form2' name='password' type='password' className='form2-body-input' required pattern=\"(?=.*[a-z])(?=.*\\d)(?=.*[A-Z]).{8,}\" title='Password must contain one lowercase letter, one uppercase letter, one number, and at least 8 characters' ref={this.passwordRef} /><br />\n                        <div className='form2-body-password-req'>\n                            <p className='lower-psw invalid'>Must contain an lowercase letter</p>\n                            <p className='upper-psw invalid'>Must contain an uppercase letter</p>\n                            <p className='oneNum invalid'>Must contain a number</p>\n                            <p className='eightLength invalid'>Must contain at least 8 characters</p>\n                        </div>\n                        <label htmlFor='email-form2' className='form2-body-label' >Email</label><br />\n                        <input id='email-form2' type='email' className='form2-body-input' required ref={this.emailRef} /><br />\n                        <button className='form2-body-btn' type='submit'>Submit</button>\n                    </div>}\n                {this.state.submitted &&\n                    <div className='submitted-form2-div'>\n                        <p>fullName: {this.fullNameRef.current.value}</p>\n                        <p>username: {this.usernameRef.current.value}</p>\n                        <p>password: {this.passwordRef.current.value}</p>\n                        <p>email: {this.emailRef.current.value}</p>\n                    </div>\n                }\n            </form>\n        );\n    };\n};\n\nexport default Body;","import React, { useState, useEffect } from 'react';\n\nimport './Body3.css';\n\nconst Body3 = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [age, setAge] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zip, setZip] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n    const [signUp, setSignUp] = useState(false);\n\n    const signedUpHandler = (event) => {\n        setSignUp(true);\n    }\n\n    const pageHandler = (event) => {\n        // event.preventDefault();\n        const { name } = event.target;\n        if (name === 'next') { setCurrentPage(count => count + 1); }\n        if (name === 'previous') { setCurrentPage(count => count - 1); }\n    }\n\n    useEffect(() => {\n        const circle1 = document.querySelector('.c1');\n        const circle2 = document.querySelector('.c2');\n        const circle3 = document.querySelector('.c3');\n        if (currentPage === 1) {\n            circle1.classList.add('active');\n            circle1.classList.remove('good');\n\n            circle2.classList.remove('active');\n            circle2.classList.add('inactive');\n            circle2.classList.remove('good');\n\n            circle3.classList.remove('active');\n            circle3.classList.add('inactive');\n        }\n        if (currentPage === 2) {\n            circle1.classList.remove('active');\n            circle1.classList.add('good');\n\n            circle2.classList.add('active');\n            circle2.classList.remove('inactive');\n            circle2.classList.remove('good');\n\n            circle3.classList.remove('active');\n            circle3.classList.add('inactive');\n        }\n\n        if (currentPage === 3) {\n            circle1.classList.remove('active');\n            circle1.classList.add('good');\n\n            circle2.classList.remove('active');\n            circle2.classList.remove('inactive');\n            circle2.classList.add('good');\n\n            circle3.classList.add('active');\n            circle3.classList.remove('inactive');\n        }\n\n    }, [currentPage]);\n\n    return (\n        <form className='form3-body'>\n            {signUp && <div className='form3-success'> Registration Successful</div>}\n            {!signUp && <h1 className='center'>Registration Form</h1>}\n            {currentPage === 1 && !signUp ? <div>\n                <h1 className='center'>Personal Information</h1>\n                <input type='text' className='form3-input' id='form3_fname' placeholder='First Name' required onChange={e => setFirstName(e.target.value)} value={firstName} />\n                <input type='text' className='form3-input' id='form3_lname' placeholder='Last Name' required onChange={e => setLastName(e.target.value)} value={lastName} />\n                <input type='number' className='form3-input' id='form3_age' placeholder='Age' required onChange={e => setAge(e.target.value)} value={age} />\n\n                {firstName.length > 0 && lastName.length > 0 && age > 9 ?\n                    <div className='form3-body-btn'>\n                        <button onClick={e => pageHandler(e)} name='next'>Next</button>\n                    </div>\n                    : null}\n\n            </div> : null\n            }\n            {currentPage === 2 && !signUp ? <div>\n                <h1 className='center'>Location</h1>\n                <input type='text' className='form3-input' id='form3_city' placeholder='Current City / Town' required onChange={e => setCity(e.target.value)} value={city} />\n                <input type='text' className='form3-input' id='form3_state' placeholder='State' required onChange={e => setState(e.target.value)} value={state} />\n                <input type='zip' className='form3-input' id='form3_zip' placeholder='Zip Code' required onChange={e => setZip(e.target.value)} value={zip} />\n                {city.length > 0 && state.length > 0 && zip.length >= 5 ?\n                    <div className='form3-body-btn'>\n                        <button onClick={e => pageHandler(e)} name='previous'>Previous</button>\n                        <button onClick={e => pageHandler(e)} name='next'>Next</button>\n                    </div>\n                    : null}\n            </div> : null\n            }\n            {currentPage === 3 && !signUp ? <div>\n                <h1 className='center'>Account Information</h1>\n                <input type='text' className='form3-input' id='form3_usr' placeholder='Username' required onChange={e => setUsername(e.target.value)} value={username} />\n                <input type='password' className='form3-input' id='form3_psw' placeholder='Password' required onChange={e => setPassword(e.target.value)} value={password} />\n                <input type='password' className='form3-input' id='form3_pswConf' placeholder='Confirm Password' required onChange={e => setPasswordConfirm(e.target.value)} value={passwordConfirm} />\n                {username.length > 0 && password.length > 0 && password === passwordConfirm ?\n                    <div className='form3-body-btn'>\n                        <button onClick={e => pageHandler(e)} name='previous'>Previous</button>\n                        <button onClick={e => signedUpHandler(e)}>Submit</button>\n                    </div>\n                    : null}\n            </div> : null\n            }\n            {!signUp && <div className='div-circle'>\n                <span className='circle c1'>&nbsp;</span>\n                <span className='circle c2'>&nbsp;</span>\n                <span className='circle c3'>&nbsp;</span>\n            </div>}\n        </form >\n    );\n};\n\nexport default Body3;","import React from 'react';\n\nimport './App.css';\nimport Form1 from './Form1/Body';\nimport Form2 from './Form2/Body2';\nimport Form3 from './Form3/Body3';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form1 />\n      <Form2 />\n      <Form3 />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}